#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HOIA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ioDB")]
	public partial class DDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertMN_Auftrag_Kategorie(MN_Auftrag_Kategorie instance);
    partial void UpdateMN_Auftrag_Kategorie(MN_Auftrag_Kategorie instance);
    partial void DeleteMN_Auftrag_Kategorie(MN_Auftrag_Kategorie instance);
    partial void InsertMaschinenart(Maschinenart instance);
    partial void UpdateMaschinenart(Maschinenart instance);
    partial void DeleteMaschinenart(Maschinenart instance);
    partial void InsertKunde(Kunde instance);
    partial void UpdateKunde(Kunde instance);
    partial void DeleteKunde(Kunde instance);
    partial void InsertBestimmungsort(Bestimmungsort instance);
    partial void UpdateBestimmungsort(Bestimmungsort instance);
    partial void DeleteBestimmungsort(Bestimmungsort instance);
    partial void InsertKategorie(Kategorie instance);
    partial void UpdateKategorie(Kategorie instance);
    partial void DeleteKategorie(Kategorie instance);
    partial void InsertMaschine(Maschine instance);
    partial void UpdateMaschine(Maschine instance);
    partial void DeleteMaschine(Maschine instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    partial void InsertVerfahren(Verfahren instance);
    partial void UpdateVerfahren(Verfahren instance);
    partial void DeleteVerfahren(Verfahren instance);
    partial void InsertMN_Verfahren_Prozess_Material(MN_Verfahren_Prozess_Material instance);
    partial void UpdateMN_Verfahren_Prozess_Material(MN_Verfahren_Prozess_Material instance);
    partial void DeleteMN_Verfahren_Prozess_Material(MN_Verfahren_Prozess_Material instance);
    partial void InsertVerfahren_Prozess_Anwendung(Verfahren_Prozess_Anwendung instance);
    partial void UpdateVerfahren_Prozess_Anwendung(Verfahren_Prozess_Anwendung instance);
    partial void DeleteVerfahren_Prozess_Anwendung(Verfahren_Prozess_Anwendung instance);
    partial void InsertAuftrag(Auftrag instance);
    partial void UpdateAuftrag(Auftrag instance);
    partial void DeleteAuftrag(Auftrag instance);
    partial void InsertAuftrags_Zuordnung(Auftrags_Zuordnung instance);
    partial void UpdateAuftrags_Zuordnung(Auftrags_Zuordnung instance);
    partial void DeleteAuftrags_Zuordnung(Auftrags_Zuordnung instance);
    #endregion
		
		public DDataContext() : 
				base(global::HOIA.Properties.Settings.Default.ioDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MN_Auftrag_Kategorie> MN_Auftrag_Kategorie
		{
			get
			{
				return this.GetTable<MN_Auftrag_Kategorie>();
			}
		}
		
		public System.Data.Linq.Table<Maschinenart> Maschinenart
		{
			get
			{
				return this.GetTable<Maschinenart>();
			}
		}
		
		public System.Data.Linq.Table<Kunde> Kunde
		{
			get
			{
				return this.GetTable<Kunde>();
			}
		}
		
		public System.Data.Linq.Table<Bestimmungsort> Bestimmungsort
		{
			get
			{
				return this.GetTable<Bestimmungsort>();
			}
		}
		
		public System.Data.Linq.Table<Kategorie> Kategorie
		{
			get
			{
				return this.GetTable<Kategorie>();
			}
		}
		
		public System.Data.Linq.Table<Maschine> Maschine
		{
			get
			{
				return this.GetTable<Maschine>();
			}
		}
		
		public System.Data.Linq.Table<Material> Material
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
		
		public System.Data.Linq.Table<View_Verfahren_der_Maschinen> View_Verfahren_der_Maschinen
		{
			get
			{
				return this.GetTable<View_Verfahren_der_Maschinen>();
			}
		}
		
		public System.Data.Linq.Table<View_Auftrag_AZU_Verfahren> View_Auftrag_AZU_Verfahren
		{
			get
			{
				return this.GetTable<View_Auftrag_AZU_Verfahren>();
			}
		}
		
		public System.Data.Linq.Table<Verfahren> Verfahren
		{
			get
			{
				return this.GetTable<Verfahren>();
			}
		}
		
		public System.Data.Linq.Table<MN_Verfahren_Prozess_Material> MN_Verfahren_Prozess_Material
		{
			get
			{
				return this.GetTable<MN_Verfahren_Prozess_Material>();
			}
		}
		
		public System.Data.Linq.Table<Verfahren_Prozess_Anwendung> Verfahren_Prozess_Anwendung
		{
			get
			{
				return this.GetTable<Verfahren_Prozess_Anwendung>();
			}
		}
		
		public System.Data.Linq.Table<View_Prozess_Anwendung_Material> View_Prozess_Anwendung_Material
		{
			get
			{
				return this.GetTable<View_Prozess_Anwendung_Material>();
			}
		}
		
		public System.Data.Linq.Table<View_Auftrag_Gesamtgewicht> View_Auftrag_Gesamtgewicht
		{
			get
			{
				return this.GetTable<View_Auftrag_Gesamtgewicht>();
			}
		}
		
		public System.Data.Linq.Table<View_Verwaltung_Aufträge_Suche> View_Verwaltung_Aufträge_Suche
		{
			get
			{
				return this.GetTable<View_Verwaltung_Aufträge_Suche>();
			}
		}
		
		public System.Data.Linq.Table<Auftrag> Auftrag
		{
			get
			{
				return this.GetTable<Auftrag>();
			}
		}
		
		public System.Data.Linq.Table<Auftrags_Zuordnung> Auftrags_Zuordnung
		{
			get
			{
				return this.GetTable<Auftrags_Zuordnung>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MN_Auftrag_Kategorie")]
	public partial class MN_Auftrag_Kategorie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Id_Auftrags_Zuorndung;
		
		private System.Nullable<int> _Id_Kategorie;
		
		private EntityRef<Kategorie> _Kategorie;
		
		private EntityRef<Auftrags_Zuordnung> _Auftrags_Zuordnung;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_Auftrags_ZuorndungChanging(System.Nullable<int> value);
    partial void OnId_Auftrags_ZuorndungChanged();
    partial void OnId_KategorieChanging(System.Nullable<int> value);
    partial void OnId_KategorieChanged();
    #endregion
		
		public MN_Auftrag_Kategorie()
		{
			this._Kategorie = default(EntityRef<Kategorie>);
			this._Auftrags_Zuordnung = default(EntityRef<Auftrags_Zuordnung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Auftrags_Zuorndung", DbType="Int")]
		public System.Nullable<int> Id_Auftrags_Zuorndung
		{
			get
			{
				return this._Id_Auftrags_Zuorndung;
			}
			set
			{
				if ((this._Id_Auftrags_Zuorndung != value))
				{
					if (this._Auftrags_Zuordnung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Auftrags_ZuorndungChanging(value);
					this.SendPropertyChanging();
					this._Id_Auftrags_Zuorndung = value;
					this.SendPropertyChanged("Id_Auftrags_Zuorndung");
					this.OnId_Auftrags_ZuorndungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Kategorie", DbType="Int")]
		public System.Nullable<int> Id_Kategorie
		{
			get
			{
				return this._Id_Kategorie;
			}
			set
			{
				if ((this._Id_Kategorie != value))
				{
					if (this._Kategorie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_KategorieChanging(value);
					this.SendPropertyChanging();
					this._Id_Kategorie = value;
					this.SendPropertyChanged("Id_Kategorie");
					this.OnId_KategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorie_MN_Auftrag_Kategorie", Storage="_Kategorie", ThisKey="Id_Kategorie", OtherKey="Id", IsForeignKey=true)]
		public Kategorie Kategorie
		{
			get
			{
				return this._Kategorie.Entity;
			}
			set
			{
				Kategorie previousValue = this._Kategorie.Entity;
				if (((previousValue != value) 
							|| (this._Kategorie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategorie.Entity = null;
						previousValue.MN_Auftrag_Kategorie.Remove(this);
					}
					this._Kategorie.Entity = value;
					if ((value != null))
					{
						value.MN_Auftrag_Kategorie.Add(this);
						this._Id_Kategorie = value.Id;
					}
					else
					{
						this._Id_Kategorie = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategorie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auftrags_Zuordnung_MN_Auftrag_Kategorie", Storage="_Auftrags_Zuordnung", ThisKey="Id_Auftrags_Zuorndung", OtherKey="Id", IsForeignKey=true)]
		public Auftrags_Zuordnung Auftrags_Zuordnung
		{
			get
			{
				return this._Auftrags_Zuordnung.Entity;
			}
			set
			{
				Auftrags_Zuordnung previousValue = this._Auftrags_Zuordnung.Entity;
				if (((previousValue != value) 
							|| (this._Auftrags_Zuordnung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auftrags_Zuordnung.Entity = null;
						previousValue.MN_Auftrag_Kategorie.Remove(this);
					}
					this._Auftrags_Zuordnung.Entity = value;
					if ((value != null))
					{
						value.MN_Auftrag_Kategorie.Add(this);
						this._Id_Auftrags_Zuorndung = value.Id;
					}
					else
					{
						this._Id_Auftrags_Zuorndung = default(Nullable<int>);
					}
					this.SendPropertyChanged("Auftrags_Zuordnung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Maschinenart")]
	public partial class Maschinenart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Maschine> _Maschine;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Maschinenart()
		{
			this._Maschine = new EntitySet<Maschine>(new Action<Maschine>(this.attach_Maschine), new Action<Maschine>(this.detach_Maschine));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maschinenart_Maschine", Storage="_Maschine", ThisKey="Id", OtherKey="Id_Maschinenart")]
		public EntitySet<Maschine> Maschine
		{
			get
			{
				return this._Maschine;
			}
			set
			{
				this._Maschine.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Maschine(Maschine entity)
		{
			this.SendPropertyChanging();
			entity.Maschinenart = this;
		}
		
		private void detach_Maschine(Maschine entity)
		{
			this.SendPropertyChanging();
			entity.Maschinenart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kunde")]
	public partial class Kunde : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Anschrift;
		
		private string _PLZ;
		
		private string _Stadt;
		
		private string _Land;
		
		private EntitySet<Auftrag> _Auftrag;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAnschriftChanging(string value);
    partial void OnAnschriftChanged();
    partial void OnPLZChanging(string value);
    partial void OnPLZChanged();
    partial void OnStadtChanging(string value);
    partial void OnStadtChanged();
    partial void OnLandChanging(string value);
    partial void OnLandChanged();
    #endregion
		
		public Kunde()
		{
			this._Auftrag = new EntitySet<Auftrag>(new Action<Auftrag>(this.attach_Auftrag), new Action<Auftrag>(this.detach_Auftrag));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anschrift", DbType="VarChar(50)")]
		public string Anschrift
		{
			get
			{
				return this._Anschrift;
			}
			set
			{
				if ((this._Anschrift != value))
				{
					this.OnAnschriftChanging(value);
					this.SendPropertyChanging();
					this._Anschrift = value;
					this.SendPropertyChanged("Anschrift");
					this.OnAnschriftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLZ", DbType="VarChar(50)")]
		public string PLZ
		{
			get
			{
				return this._PLZ;
			}
			set
			{
				if ((this._PLZ != value))
				{
					this.OnPLZChanging(value);
					this.SendPropertyChanging();
					this._PLZ = value;
					this.SendPropertyChanged("PLZ");
					this.OnPLZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stadt", DbType="VarChar(50)")]
		public string Stadt
		{
			get
			{
				return this._Stadt;
			}
			set
			{
				if ((this._Stadt != value))
				{
					this.OnStadtChanging(value);
					this.SendPropertyChanging();
					this._Stadt = value;
					this.SendPropertyChanged("Stadt");
					this.OnStadtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Land", DbType="VarChar(50)")]
		public string Land
		{
			get
			{
				return this._Land;
			}
			set
			{
				if ((this._Land != value))
				{
					this.OnLandChanging(value);
					this.SendPropertyChanging();
					this._Land = value;
					this.SendPropertyChanged("Land");
					this.OnLandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunde_Auftrag", Storage="_Auftrag", ThisKey="Id", OtherKey="Id_Kunde")]
		public EntitySet<Auftrag> Auftrag
		{
			get
			{
				return this._Auftrag;
			}
			set
			{
				this._Auftrag.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Auftrag(Auftrag entity)
		{
			this.SendPropertyChanging();
			entity.Kunde = this;
		}
		
		private void detach_Auftrag(Auftrag entity)
		{
			this.SendPropertyChanging();
			entity.Kunde = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bestimmungsort")]
	public partial class Bestimmungsort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Anschrift;
		
		private string _PLZ;
		
		private string _Stadt;
		
		private string _Land;
		
		private EntitySet<Auftrag> _Auftrag;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAnschriftChanging(string value);
    partial void OnAnschriftChanged();
    partial void OnPLZChanging(string value);
    partial void OnPLZChanged();
    partial void OnStadtChanging(string value);
    partial void OnStadtChanged();
    partial void OnLandChanging(string value);
    partial void OnLandChanged();
    #endregion
		
		public Bestimmungsort()
		{
			this._Auftrag = new EntitySet<Auftrag>(new Action<Auftrag>(this.attach_Auftrag), new Action<Auftrag>(this.detach_Auftrag));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anschrift", DbType="VarChar(50)")]
		public string Anschrift
		{
			get
			{
				return this._Anschrift;
			}
			set
			{
				if ((this._Anschrift != value))
				{
					this.OnAnschriftChanging(value);
					this.SendPropertyChanging();
					this._Anschrift = value;
					this.SendPropertyChanged("Anschrift");
					this.OnAnschriftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLZ", DbType="VarChar(50)")]
		public string PLZ
		{
			get
			{
				return this._PLZ;
			}
			set
			{
				if ((this._PLZ != value))
				{
					this.OnPLZChanging(value);
					this.SendPropertyChanging();
					this._PLZ = value;
					this.SendPropertyChanged("PLZ");
					this.OnPLZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stadt", DbType="VarChar(50)")]
		public string Stadt
		{
			get
			{
				return this._Stadt;
			}
			set
			{
				if ((this._Stadt != value))
				{
					this.OnStadtChanging(value);
					this.SendPropertyChanging();
					this._Stadt = value;
					this.SendPropertyChanged("Stadt");
					this.OnStadtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Land", DbType="VarChar(50)")]
		public string Land
		{
			get
			{
				return this._Land;
			}
			set
			{
				if ((this._Land != value))
				{
					this.OnLandChanging(value);
					this.SendPropertyChanging();
					this._Land = value;
					this.SendPropertyChanged("Land");
					this.OnLandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bestimmungsort_Auftrag", Storage="_Auftrag", ThisKey="Id", OtherKey="Id_Bestimmungsort")]
		public EntitySet<Auftrag> Auftrag
		{
			get
			{
				return this._Auftrag;
			}
			set
			{
				this._Auftrag.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Auftrag(Auftrag entity)
		{
			this.SendPropertyChanging();
			entity.Bestimmungsort = this;
		}
		
		private void detach_Auftrag(Auftrag entity)
		{
			this.SendPropertyChanging();
			entity.Bestimmungsort = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategorie")]
	public partial class Kategorie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _Id_Maschine;
		
		private EntitySet<MN_Auftrag_Kategorie> _MN_Auftrag_Kategorie;
		
		private EntityRef<Maschine> _Maschine;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnId_MaschineChanging(System.Nullable<int> value);
    partial void OnId_MaschineChanged();
    #endregion
		
		public Kategorie()
		{
			this._MN_Auftrag_Kategorie = new EntitySet<MN_Auftrag_Kategorie>(new Action<MN_Auftrag_Kategorie>(this.attach_MN_Auftrag_Kategorie), new Action<MN_Auftrag_Kategorie>(this.detach_MN_Auftrag_Kategorie));
			this._Maschine = default(EntityRef<Maschine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Maschine", DbType="Int")]
		public System.Nullable<int> Id_Maschine
		{
			get
			{
				return this._Id_Maschine;
			}
			set
			{
				if ((this._Id_Maschine != value))
				{
					if (this._Maschine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_MaschineChanging(value);
					this.SendPropertyChanging();
					this._Id_Maschine = value;
					this.SendPropertyChanged("Id_Maschine");
					this.OnId_MaschineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorie_MN_Auftrag_Kategorie", Storage="_MN_Auftrag_Kategorie", ThisKey="Id", OtherKey="Id_Kategorie")]
		public EntitySet<MN_Auftrag_Kategorie> MN_Auftrag_Kategorie
		{
			get
			{
				return this._MN_Auftrag_Kategorie;
			}
			set
			{
				this._MN_Auftrag_Kategorie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maschine_Kategorie", Storage="_Maschine", ThisKey="Id_Maschine", OtherKey="Id", IsForeignKey=true)]
		public Maschine Maschine
		{
			get
			{
				return this._Maschine.Entity;
			}
			set
			{
				Maschine previousValue = this._Maschine.Entity;
				if (((previousValue != value) 
							|| (this._Maschine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maschine.Entity = null;
						previousValue.Kategorie.Remove(this);
					}
					this._Maschine.Entity = value;
					if ((value != null))
					{
						value.Kategorie.Add(this);
						this._Id_Maschine = value.Id;
					}
					else
					{
						this._Id_Maschine = default(Nullable<int>);
					}
					this.SendPropertyChanged("Maschine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MN_Auftrag_Kategorie(MN_Auftrag_Kategorie entity)
		{
			this.SendPropertyChanging();
			entity.Kategorie = this;
		}
		
		private void detach_MN_Auftrag_Kategorie(MN_Auftrag_Kategorie entity)
		{
			this.SendPropertyChanging();
			entity.Kategorie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Maschine")]
	public partial class Maschine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _Temperatur;
		
		private System.Nullable<bool> _Programm;
		
		private System.Nullable<int> _Id_Maschinenart;
		
		private EntitySet<Kategorie> _Kategorie;
		
		private EntitySet<Verfahren> _Verfahren;
		
		private EntitySet<Auftrags_Zuordnung> _Auftrags_Zuordnung;
		
		private EntityRef<Maschinenart> _Maschinenart;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTemperaturChanging(System.Nullable<bool> value);
    partial void OnTemperaturChanged();
    partial void OnProgrammChanging(System.Nullable<bool> value);
    partial void OnProgrammChanged();
    partial void OnId_MaschinenartChanging(System.Nullable<int> value);
    partial void OnId_MaschinenartChanged();
    #endregion
		
		public Maschine()
		{
			this._Kategorie = new EntitySet<Kategorie>(new Action<Kategorie>(this.attach_Kategorie), new Action<Kategorie>(this.detach_Kategorie));
			this._Verfahren = new EntitySet<Verfahren>(new Action<Verfahren>(this.attach_Verfahren), new Action<Verfahren>(this.detach_Verfahren));
			this._Auftrags_Zuordnung = new EntitySet<Auftrags_Zuordnung>(new Action<Auftrags_Zuordnung>(this.attach_Auftrags_Zuordnung), new Action<Auftrags_Zuordnung>(this.detach_Auftrags_Zuordnung));
			this._Maschinenart = default(EntityRef<Maschinenart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperatur", DbType="Bit")]
		public System.Nullable<bool> Temperatur
		{
			get
			{
				return this._Temperatur;
			}
			set
			{
				if ((this._Temperatur != value))
				{
					this.OnTemperaturChanging(value);
					this.SendPropertyChanging();
					this._Temperatur = value;
					this.SendPropertyChanged("Temperatur");
					this.OnTemperaturChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Programm", DbType="Bit")]
		public System.Nullable<bool> Programm
		{
			get
			{
				return this._Programm;
			}
			set
			{
				if ((this._Programm != value))
				{
					this.OnProgrammChanging(value);
					this.SendPropertyChanging();
					this._Programm = value;
					this.SendPropertyChanged("Programm");
					this.OnProgrammChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Maschinenart", DbType="Int")]
		public System.Nullable<int> Id_Maschinenart
		{
			get
			{
				return this._Id_Maschinenart;
			}
			set
			{
				if ((this._Id_Maschinenart != value))
				{
					if (this._Maschinenart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_MaschinenartChanging(value);
					this.SendPropertyChanging();
					this._Id_Maschinenart = value;
					this.SendPropertyChanged("Id_Maschinenart");
					this.OnId_MaschinenartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maschine_Kategorie", Storage="_Kategorie", ThisKey="Id", OtherKey="Id_Maschine")]
		public EntitySet<Kategorie> Kategorie
		{
			get
			{
				return this._Kategorie;
			}
			set
			{
				this._Kategorie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maschine_Verfahren", Storage="_Verfahren", ThisKey="Id", OtherKey="Id_Maschine")]
		public EntitySet<Verfahren> Verfahren
		{
			get
			{
				return this._Verfahren;
			}
			set
			{
				this._Verfahren.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maschine_Auftrags_Zuordnung", Storage="_Auftrags_Zuordnung", ThisKey="Id", OtherKey="Id_Maschine")]
		public EntitySet<Auftrags_Zuordnung> Auftrags_Zuordnung
		{
			get
			{
				return this._Auftrags_Zuordnung;
			}
			set
			{
				this._Auftrags_Zuordnung.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maschinenart_Maschine", Storage="_Maschinenart", ThisKey="Id_Maschinenart", OtherKey="Id", IsForeignKey=true)]
		public Maschinenart Maschinenart
		{
			get
			{
				return this._Maschinenart.Entity;
			}
			set
			{
				Maschinenart previousValue = this._Maschinenart.Entity;
				if (((previousValue != value) 
							|| (this._Maschinenart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maschinenart.Entity = null;
						previousValue.Maschine.Remove(this);
					}
					this._Maschinenart.Entity = value;
					if ((value != null))
					{
						value.Maschine.Add(this);
						this._Id_Maschinenart = value.Id;
					}
					else
					{
						this._Id_Maschinenart = default(Nullable<int>);
					}
					this.SendPropertyChanged("Maschinenart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kategorie(Kategorie entity)
		{
			this.SendPropertyChanging();
			entity.Maschine = this;
		}
		
		private void detach_Kategorie(Kategorie entity)
		{
			this.SendPropertyChanging();
			entity.Maschine = null;
		}
		
		private void attach_Verfahren(Verfahren entity)
		{
			this.SendPropertyChanging();
			entity.Maschine = this;
		}
		
		private void detach_Verfahren(Verfahren entity)
		{
			this.SendPropertyChanging();
			entity.Maschine = null;
		}
		
		private void attach_Auftrags_Zuordnung(Auftrags_Zuordnung entity)
		{
			this.SendPropertyChanging();
			entity.Maschine = this;
		}
		
		private void detach_Auftrags_Zuordnung(Auftrags_Zuordnung entity)
		{
			this.SendPropertyChanging();
			entity.Maschine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _Datum;
		
		private string _Bunde;
		
		private string _Stahlsorte;
		
		private string _Charge;
		
		private string _Status;
		
		private System.Nullable<int> _Anzahl;
		
		private System.Nullable<int> _Gewicht;
		
		private System.Nullable<bool> _Zugeordnet;
		
		private int _Id_Auftrag;
		
		private EntitySet<MN_Verfahren_Prozess_Material> _MN_Verfahren_Prozess_Material;
		
		private EntityRef<Auftrag> _Auftrag;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnDatumChanged();
    partial void OnBundeChanging(string value);
    partial void OnBundeChanged();
    partial void OnStahlsorteChanging(string value);
    partial void OnStahlsorteChanged();
    partial void OnChargeChanging(string value);
    partial void OnChargeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnAnzahlChanging(System.Nullable<int> value);
    partial void OnAnzahlChanged();
    partial void OnGewichtChanging(System.Nullable<int> value);
    partial void OnGewichtChanged();
    partial void OnZugeordnetChanging(System.Nullable<bool> value);
    partial void OnZugeordnetChanged();
    partial void OnId_AuftragChanging(int value);
    partial void OnId_AuftragChanged();
    #endregion
		
		public Material()
		{
			this._MN_Verfahren_Prozess_Material = new EntitySet<MN_Verfahren_Prozess_Material>(new Action<MN_Verfahren_Prozess_Material>(this.attach_MN_Verfahren_Prozess_Material), new Action<MN_Verfahren_Prozess_Material>(this.detach_MN_Verfahren_Prozess_Material));
			this._Auftrag = default(EntityRef<Auftrag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="DateTime")]
		public System.Nullable<System.DateTime> Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bunde", DbType="NChar(7)")]
		public string Bunde
		{
			get
			{
				return this._Bunde;
			}
			set
			{
				if ((this._Bunde != value))
				{
					this.OnBundeChanging(value);
					this.SendPropertyChanging();
					this._Bunde = value;
					this.SendPropertyChanged("Bunde");
					this.OnBundeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stahlsorte", DbType="VarChar(20)")]
		public string Stahlsorte
		{
			get
			{
				return this._Stahlsorte;
			}
			set
			{
				if ((this._Stahlsorte != value))
				{
					this.OnStahlsorteChanging(value);
					this.SendPropertyChanging();
					this._Stahlsorte = value;
					this.SendPropertyChanged("Stahlsorte");
					this.OnStahlsorteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charge", DbType="VarChar(10)")]
		public string Charge
		{
			get
			{
				return this._Charge;
			}
			set
			{
				if ((this._Charge != value))
				{
					this.OnChargeChanging(value);
					this.SendPropertyChanging();
					this._Charge = value;
					this.SendPropertyChanged("Charge");
					this.OnChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anzahl", DbType="Int")]
		public System.Nullable<int> Anzahl
		{
			get
			{
				return this._Anzahl;
			}
			set
			{
				if ((this._Anzahl != value))
				{
					this.OnAnzahlChanging(value);
					this.SendPropertyChanging();
					this._Anzahl = value;
					this.SendPropertyChanged("Anzahl");
					this.OnAnzahlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gewicht", DbType="Int")]
		public System.Nullable<int> Gewicht
		{
			get
			{
				return this._Gewicht;
			}
			set
			{
				if ((this._Gewicht != value))
				{
					this.OnGewichtChanging(value);
					this.SendPropertyChanging();
					this._Gewicht = value;
					this.SendPropertyChanged("Gewicht");
					this.OnGewichtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zugeordnet", DbType="Bit")]
		public System.Nullable<bool> Zugeordnet
		{
			get
			{
				return this._Zugeordnet;
			}
			set
			{
				if ((this._Zugeordnet != value))
				{
					this.OnZugeordnetChanging(value);
					this.SendPropertyChanging();
					this._Zugeordnet = value;
					this.SendPropertyChanged("Zugeordnet");
					this.OnZugeordnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Auftrag", DbType="Int NOT NULL")]
		public int Id_Auftrag
		{
			get
			{
				return this._Id_Auftrag;
			}
			set
			{
				if ((this._Id_Auftrag != value))
				{
					if (this._Auftrag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_AuftragChanging(value);
					this.SendPropertyChanging();
					this._Id_Auftrag = value;
					this.SendPropertyChanged("Id_Auftrag");
					this.OnId_AuftragChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_MN_Verfahren_Prozess_Material", Storage="_MN_Verfahren_Prozess_Material", ThisKey="Id", OtherKey="Id_Material")]
		public EntitySet<MN_Verfahren_Prozess_Material> MN_Verfahren_Prozess_Material
		{
			get
			{
				return this._MN_Verfahren_Prozess_Material;
			}
			set
			{
				this._MN_Verfahren_Prozess_Material.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auftrag_Material", Storage="_Auftrag", ThisKey="Id_Auftrag", OtherKey="Id", IsForeignKey=true)]
		public Auftrag Auftrag
		{
			get
			{
				return this._Auftrag.Entity;
			}
			set
			{
				Auftrag previousValue = this._Auftrag.Entity;
				if (((previousValue != value) 
							|| (this._Auftrag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auftrag.Entity = null;
						previousValue.Material.Remove(this);
					}
					this._Auftrag.Entity = value;
					if ((value != null))
					{
						value.Material.Add(this);
						this._Id_Auftrag = value.Id;
					}
					else
					{
						this._Id_Auftrag = default(int);
					}
					this.SendPropertyChanged("Auftrag");
				}
			}
		}

        public int Display_Position { get; internal set; }

        public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MN_Verfahren_Prozess_Material(MN_Verfahren_Prozess_Material entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_MN_Verfahren_Prozess_Material(MN_Verfahren_Prozess_Material entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Verfahren_der_Maschinen")]
	public partial class View_Verfahren_der_Maschinen
	{
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _Id_Maschine;
		
		private string _Name_Verfahren;
		
		public View_Verfahren_der_Maschinen()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Maschine", DbType="Int")]
		public System.Nullable<int> Id_Maschine
		{
			get
			{
				return this._Id_Maschine;
			}
			set
			{
				if ((this._Id_Maschine != value))
				{
					this._Id_Maschine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Verfahren", DbType="VarChar(50)")]
		public string Name_Verfahren
		{
			get
			{
				return this._Name_Verfahren;
			}
			set
			{
				if ((this._Name_Verfahren != value))
				{
					this._Name_Verfahren = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Auftrag_AZU_Verfahren")]
	public partial class View_Auftrag_AZU_Verfahren
	{
		
		private int _Id;
		
		private string _ODL;
		
		private System.Nullable<int> _Id_Auftrag;
		
		private System.Nullable<int> _Id_Maschine;
		
		private System.Nullable<int> _Id_Verfahren;
		
		private int _Verfahren_Id_Org;
		
		private string _Name;
		
		private string _Status;
		
		public View_Auftrag_AZU_Verfahren()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODL", DbType="VarChar(10)")]
		public string ODL
		{
			get
			{
				return this._ODL;
			}
			set
			{
				if ((this._ODL != value))
				{
					this._ODL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Auftrag", DbType="Int")]
		public System.Nullable<int> Id_Auftrag
		{
			get
			{
				return this._Id_Auftrag;
			}
			set
			{
				if ((this._Id_Auftrag != value))
				{
					this._Id_Auftrag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Maschine", DbType="Int")]
		public System.Nullable<int> Id_Maschine
		{
			get
			{
				return this._Id_Maschine;
			}
			set
			{
				if ((this._Id_Maschine != value))
				{
					this._Id_Maschine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Verfahren", DbType="Int")]
		public System.Nullable<int> Id_Verfahren
		{
			get
			{
				return this._Id_Verfahren;
			}
			set
			{
				if ((this._Id_Verfahren != value))
				{
					this._Id_Verfahren = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verfahren_Id_Org", DbType="Int NOT NULL")]
		public int Verfahren_Id_Org
		{
			get
			{
				return this._Verfahren_Id_Org;
			}
			set
			{
				if ((this._Verfahren_Id_Org != value))
				{
					this._Verfahren_Id_Org = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Verfahren")]
	public partial class Verfahren : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Beschreibung;
		
		private System.Nullable<int> _Id_Maschine;
		
		private EntitySet<Verfahren_Prozess_Anwendung> _Verfahren_Prozess_Anwendung;
		
		private EntitySet<Auftrags_Zuordnung> _Auftrags_Zuordnung;
		
		private EntityRef<Maschine> _Maschine;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBeschreibungChanging(string value);
    partial void OnBeschreibungChanged();
    partial void OnId_MaschineChanging(System.Nullable<int> value);
    partial void OnId_MaschineChanged();
    #endregion
		
		public Verfahren()
		{
			this._Verfahren_Prozess_Anwendung = new EntitySet<Verfahren_Prozess_Anwendung>(new Action<Verfahren_Prozess_Anwendung>(this.attach_Verfahren_Prozess_Anwendung), new Action<Verfahren_Prozess_Anwendung>(this.detach_Verfahren_Prozess_Anwendung));
			this._Auftrags_Zuordnung = new EntitySet<Auftrags_Zuordnung>(new Action<Auftrags_Zuordnung>(this.attach_Auftrags_Zuordnung), new Action<Auftrags_Zuordnung>(this.detach_Auftrags_Zuordnung));
			this._Maschine = default(EntityRef<Maschine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschreibung", DbType="VarChar(MAX)")]
		public string Beschreibung
		{
			get
			{
				return this._Beschreibung;
			}
			set
			{
				if ((this._Beschreibung != value))
				{
					this.OnBeschreibungChanging(value);
					this.SendPropertyChanging();
					this._Beschreibung = value;
					this.SendPropertyChanged("Beschreibung");
					this.OnBeschreibungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Maschine", DbType="Int")]
		public System.Nullable<int> Id_Maschine
		{
			get
			{
				return this._Id_Maschine;
			}
			set
			{
				if ((this._Id_Maschine != value))
				{
					if (this._Maschine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_MaschineChanging(value);
					this.SendPropertyChanging();
					this._Id_Maschine = value;
					this.SendPropertyChanged("Id_Maschine");
					this.OnId_MaschineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Verfahren_Verfahren_Prozess_Anwendung", Storage="_Verfahren_Prozess_Anwendung", ThisKey="Id", OtherKey="Id_Verfahren")]
		public EntitySet<Verfahren_Prozess_Anwendung> Verfahren_Prozess_Anwendung
		{
			get
			{
				return this._Verfahren_Prozess_Anwendung;
			}
			set
			{
				this._Verfahren_Prozess_Anwendung.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Verfahren_Auftrags_Zuordnung", Storage="_Auftrags_Zuordnung", ThisKey="Id", OtherKey="Id_Verfahren")]
		public EntitySet<Auftrags_Zuordnung> Auftrags_Zuordnung
		{
			get
			{
				return this._Auftrags_Zuordnung;
			}
			set
			{
				this._Auftrags_Zuordnung.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maschine_Verfahren", Storage="_Maschine", ThisKey="Id_Maschine", OtherKey="Id", IsForeignKey=true)]
		public Maschine Maschine
		{
			get
			{
				return this._Maschine.Entity;
			}
			set
			{
				Maschine previousValue = this._Maschine.Entity;
				if (((previousValue != value) 
							|| (this._Maschine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maschine.Entity = null;
						previousValue.Verfahren.Remove(this);
					}
					this._Maschine.Entity = value;
					if ((value != null))
					{
						value.Verfahren.Add(this);
						this._Id_Maschine = value.Id;
					}
					else
					{
						this._Id_Maschine = default(Nullable<int>);
					}
					this.SendPropertyChanged("Maschine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Verfahren_Prozess_Anwendung(Verfahren_Prozess_Anwendung entity)
		{
			this.SendPropertyChanging();
			entity.Verfahren = this;
		}
		
		private void detach_Verfahren_Prozess_Anwendung(Verfahren_Prozess_Anwendung entity)
		{
			this.SendPropertyChanging();
			entity.Verfahren = null;
		}
		
		private void attach_Auftrags_Zuordnung(Auftrags_Zuordnung entity)
		{
			this.SendPropertyChanging();
			entity.Verfahren = this;
		}
		
		private void detach_Auftrags_Zuordnung(Auftrags_Zuordnung entity)
		{
			this.SendPropertyChanging();
			entity.Verfahren = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MN_Verfahren_Prozess_Material")]
	public partial class MN_Verfahren_Prozess_Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_Material;
		
		private int _Id_Verfahren_Prozess;
		
		private EntityRef<Material> _Material;
		
		private EntityRef<Verfahren_Prozess_Anwendung> _Verfahren_Prozess_Anwendung;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_MaterialChanging(int value);
    partial void OnId_MaterialChanged();
    partial void OnId_Verfahren_ProzessChanging(int value);
    partial void OnId_Verfahren_ProzessChanged();
    #endregion
		
		public MN_Verfahren_Prozess_Material()
		{
			this._Material = default(EntityRef<Material>);
			this._Verfahren_Prozess_Anwendung = default(EntityRef<Verfahren_Prozess_Anwendung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Material", DbType="Int NOT NULL")]
		public int Id_Material
		{
			get
			{
				return this._Id_Material;
			}
			set
			{
				if ((this._Id_Material != value))
				{
					if (this._Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_MaterialChanging(value);
					this.SendPropertyChanging();
					this._Id_Material = value;
					this.SendPropertyChanged("Id_Material");
					this.OnId_MaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Verfahren_Prozess", DbType="Int NOT NULL")]
		public int Id_Verfahren_Prozess
		{
			get
			{
				return this._Id_Verfahren_Prozess;
			}
			set
			{
				if ((this._Id_Verfahren_Prozess != value))
				{
					if (this._Verfahren_Prozess_Anwendung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Verfahren_ProzessChanging(value);
					this.SendPropertyChanging();
					this._Id_Verfahren_Prozess = value;
					this.SendPropertyChanged("Id_Verfahren_Prozess");
					this.OnId_Verfahren_ProzessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_MN_Verfahren_Prozess_Material", Storage="_Material", ThisKey="Id_Material", OtherKey="Id", IsForeignKey=true)]
		public Material Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				Material previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.MN_Verfahren_Prozess_Material.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.MN_Verfahren_Prozess_Material.Add(this);
						this._Id_Material = value.Id;
					}
					else
					{
						this._Id_Material = default(int);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Verfahren_Prozess_Anwendung_MN_Verfahren_Prozess_Material", Storage="_Verfahren_Prozess_Anwendung", ThisKey="Id_Verfahren_Prozess", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Verfahren_Prozess_Anwendung Verfahren_Prozess_Anwendung
		{
			get
			{
				return this._Verfahren_Prozess_Anwendung.Entity;
			}
			set
			{
				Verfahren_Prozess_Anwendung previousValue = this._Verfahren_Prozess_Anwendung.Entity;
				if (((previousValue != value) 
							|| (this._Verfahren_Prozess_Anwendung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Verfahren_Prozess_Anwendung.Entity = null;
						previousValue.MN_Verfahren_Prozess_Material.Remove(this);
					}
					this._Verfahren_Prozess_Anwendung.Entity = value;
					if ((value != null))
					{
						value.MN_Verfahren_Prozess_Material.Add(this);
						this._Id_Verfahren_Prozess = value.Id;
					}
					else
					{
						this._Id_Verfahren_Prozess = default(int);
					}
					this.SendPropertyChanged("Verfahren_Prozess_Anwendung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Verfahren_Prozess_Anwendung")]
	public partial class Verfahren_Prozess_Anwendung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _Id_Verfahren;
		
		private System.Nullable<int> _Schritt;
		
		private System.Nullable<System.DateTime> _Erstellungsdatum;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _Start;
		
		private System.Nullable<System.DateTime> _Stop;
		
		private EntitySet<MN_Verfahren_Prozess_Material> _MN_Verfahren_Prozess_Material;
		
		private EntityRef<Verfahren> _Verfahren;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnId_VerfahrenChanging(System.Nullable<int> value);
    partial void OnId_VerfahrenChanged();
    partial void OnSchrittChanging(System.Nullable<int> value);
    partial void OnSchrittChanged();
    partial void OnErstellungsdatumChanging(System.Nullable<System.DateTime> value);
    partial void OnErstellungsdatumChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnStartChanging(System.Nullable<System.DateTime> value);
    partial void OnStartChanged();
    partial void OnStopChanging(System.Nullable<System.DateTime> value);
    partial void OnStopChanged();
    #endregion
		
		public Verfahren_Prozess_Anwendung()
		{
			this._MN_Verfahren_Prozess_Material = new EntitySet<MN_Verfahren_Prozess_Material>(new Action<MN_Verfahren_Prozess_Material>(this.attach_MN_Verfahren_Prozess_Material), new Action<MN_Verfahren_Prozess_Material>(this.detach_MN_Verfahren_Prozess_Material));
			this._Verfahren = default(EntityRef<Verfahren>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Verfahren", DbType="Int")]
		public System.Nullable<int> Id_Verfahren
		{
			get
			{
				return this._Id_Verfahren;
			}
			set
			{
				if ((this._Id_Verfahren != value))
				{
					if (this._Verfahren.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_VerfahrenChanging(value);
					this.SendPropertyChanging();
					this._Id_Verfahren = value;
					this.SendPropertyChanged("Id_Verfahren");
					this.OnId_VerfahrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schritt", DbType="Int")]
		public System.Nullable<int> Schritt
		{
			get
			{
				return this._Schritt;
			}
			set
			{
				if ((this._Schritt != value))
				{
					this.OnSchrittChanging(value);
					this.SendPropertyChanging();
					this._Schritt = value;
					this.SendPropertyChanged("Schritt");
					this.OnSchrittChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Erstellungsdatum", DbType="DateTime")]
		public System.Nullable<System.DateTime> Erstellungsdatum
		{
			get
			{
				return this._Erstellungsdatum;
			}
			set
			{
				if ((this._Erstellungsdatum != value))
				{
					this.OnErstellungsdatumChanging(value);
					this.SendPropertyChanging();
					this._Erstellungsdatum = value;
					this.SendPropertyChanged("Erstellungsdatum");
					this.OnErstellungsdatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start
		{
			get
			{
				return this._Start;
			}
			set
			{
				if ((this._Start != value))
				{
					this.OnStartChanging(value);
					this.SendPropertyChanging();
					this._Start = value;
					this.SendPropertyChanged("Start");
					this.OnStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stop", DbType="DateTime")]
		public System.Nullable<System.DateTime> Stop
		{
			get
			{
				return this._Stop;
			}
			set
			{
				if ((this._Stop != value))
				{
					this.OnStopChanging(value);
					this.SendPropertyChanging();
					this._Stop = value;
					this.SendPropertyChanged("Stop");
					this.OnStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Verfahren_Prozess_Anwendung_MN_Verfahren_Prozess_Material", Storage="_MN_Verfahren_Prozess_Material", ThisKey="Id", OtherKey="Id_Verfahren_Prozess")]
		public EntitySet<MN_Verfahren_Prozess_Material> MN_Verfahren_Prozess_Material
		{
			get
			{
				return this._MN_Verfahren_Prozess_Material;
			}
			set
			{
				this._MN_Verfahren_Prozess_Material.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Verfahren_Verfahren_Prozess_Anwendung", Storage="_Verfahren", ThisKey="Id_Verfahren", OtherKey="Id", IsForeignKey=true)]
		public Verfahren Verfahren
		{
			get
			{
				return this._Verfahren.Entity;
			}
			set
			{
				Verfahren previousValue = this._Verfahren.Entity;
				if (((previousValue != value) 
							|| (this._Verfahren.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Verfahren.Entity = null;
						previousValue.Verfahren_Prozess_Anwendung.Remove(this);
					}
					this._Verfahren.Entity = value;
					if ((value != null))
					{
						value.Verfahren_Prozess_Anwendung.Add(this);
						this._Id_Verfahren = value.Id;
					}
					else
					{
						this._Id_Verfahren = default(Nullable<int>);
					}
					this.SendPropertyChanged("Verfahren");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MN_Verfahren_Prozess_Material(MN_Verfahren_Prozess_Material entity)
		{
			this.SendPropertyChanging();
			entity.Verfahren_Prozess_Anwendung = this;
		}
		
		private void detach_MN_Verfahren_Prozess_Material(MN_Verfahren_Prozess_Material entity)
		{
			this.SendPropertyChanging();
			entity.Verfahren_Prozess_Anwendung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Prozess_Anwendung_Material")]
	public partial class View_Prozess_Anwendung_Material
	{
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Erstellungsdatum;
		
		private int _Id_Verfahren_Prozess;
		
		private int _Id_Material;
		
		private int _Id_Material_OTab;
		
		private string _Status;
		
		public View_Prozess_Anwendung_Material()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Erstellungsdatum", DbType="DateTime")]
		public System.Nullable<System.DateTime> Erstellungsdatum
		{
			get
			{
				return this._Erstellungsdatum;
			}
			set
			{
				if ((this._Erstellungsdatum != value))
				{
					this._Erstellungsdatum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Verfahren_Prozess", DbType="Int NOT NULL")]
		public int Id_Verfahren_Prozess
		{
			get
			{
				return this._Id_Verfahren_Prozess;
			}
			set
			{
				if ((this._Id_Verfahren_Prozess != value))
				{
					this._Id_Verfahren_Prozess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Material", DbType="Int NOT NULL")]
		public int Id_Material
		{
			get
			{
				return this._Id_Material;
			}
			set
			{
				if ((this._Id_Material != value))
				{
					this._Id_Material = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Material_OTab", DbType="Int NOT NULL")]
		public int Id_Material_OTab
		{
			get
			{
				return this._Id_Material_OTab;
			}
			set
			{
				if ((this._Id_Material_OTab != value))
				{
					this._Id_Material_OTab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Auftrag_Gesamtgewicht")]
	public partial class View_Auftrag_Gesamtgewicht
	{
		
		private string _ODL;
		
		private System.Nullable<int> _Gesamtgewicht;
		
		public View_Auftrag_Gesamtgewicht()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODL", DbType="VarChar(10)")]
		public string ODL
		{
			get
			{
				return this._ODL;
			}
			set
			{
				if ((this._ODL != value))
				{
					this._ODL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gesamtgewicht", DbType="Int")]
		public System.Nullable<int> Gesamtgewicht
		{
			get
			{
				return this._Gesamtgewicht;
			}
			set
			{
				if ((this._Gesamtgewicht != value))
				{
					this._Gesamtgewicht = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Verwaltung_Aufträge_Suche")]
	public partial class View_Verwaltung_Aufträge_Suche
	{
		
		private System.Nullable<int> _Id;
		
		private string _ODL;
		
		private string _Status;
		
		private System.Nullable<int> _Schritt;
		
		private string _Verfahren;
		
		private string _Maschine;
		
		private string _Kategorie;
		
		public View_Verwaltung_Aufträge_Suche()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODL", DbType="VarChar(10)")]
		public string ODL
		{
			get
			{
				return this._ODL;
			}
			set
			{
				if ((this._ODL != value))
				{
					this._ODL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schritt", DbType="Int")]
		public System.Nullable<int> Schritt
		{
			get
			{
				return this._Schritt;
			}
			set
			{
				if ((this._Schritt != value))
				{
					this._Schritt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verfahren", DbType="VarChar(50)")]
		public string Verfahren
		{
			get
			{
				return this._Verfahren;
			}
			set
			{
				if ((this._Verfahren != value))
				{
					this._Verfahren = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maschine", DbType="VarChar(50)")]
		public string Maschine
		{
			get
			{
				return this._Maschine;
			}
			set
			{
				if ((this._Maschine != value))
				{
					this._Maschine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kategorie", DbType="VarChar(50)")]
		public string Kategorie
		{
			get
			{
				return this._Kategorie;
			}
			set
			{
				if ((this._Kategorie != value))
				{
					this._Kategorie = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auftrag")]
	public partial class Auftrag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AuftragsNr;
		
		private string _ODL;
		
		private string _Art;
		
		private string _Verarbeitung;
		
		private string _Lagerort;
		
		private string _Position;
		
		private string _Status;
		
		private System.Nullable<double> _Abmessung1;
		
		private System.Nullable<double> _Abmessung2;
		
		private System.Nullable<double> _FLänge;
		
		private System.Nullable<double> _WLänge;
		
		private string _Charge;
		
		private string _Stahlsorte;
		
		private string _Walzung;
		
		private System.Nullable<System.DateTime> _Auftragsdatum;
		
		private System.Nullable<System.DateTime> _Liefertermin;
		
		private string _TechnischeAnmerkungen;
		
		private string _Bemerkungen;
		
		private System.Nullable<bool> _Wichtig;
		
		private System.Nullable<int> _Id_Kunde;
		
		private System.Nullable<int> _Id_Bestimmungsort;
		
		private System.Nullable<double> _C;
		
		private System.Nullable<double> _Mn;
		
		private System.Nullable<double> _Si;
		
		private System.Nullable<double> _P;
		
		private System.Nullable<double> _S;
		
		private System.Nullable<double> _Cr;
		
		private System.Nullable<double> _Ni;
		
		private System.Nullable<double> _Mo;
		
		private EntitySet<Material> _Material;
		
		private EntitySet<Auftrags_Zuordnung> _Auftrags_Zuordnung;
		
		private EntityRef<Bestimmungsort> _Bestimmungsort;
		
		private EntityRef<Kunde> _Kunde;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAuftragsNrChanging(string value);
    partial void OnAuftragsNrChanged();
    partial void OnODLChanging(string value);
    partial void OnODLChanged();
    partial void OnArtChanging(string value);
    partial void OnArtChanged();
    partial void OnVerarbeitungChanging(string value);
    partial void OnVerarbeitungChanged();
    partial void OnLagerortChanging(string value);
    partial void OnLagerortChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnAbmessung1Changing(System.Nullable<double> value);
    partial void OnAbmessung1Changed();
    partial void OnAbmessung2Changing(System.Nullable<double> value);
    partial void OnAbmessung2Changed();
    partial void OnFLängeChanging(System.Nullable<double> value);
    partial void OnFLängeChanged();
    partial void OnWLängeChanging(System.Nullable<double> value);
    partial void OnWLängeChanged();
    partial void OnChargeChanging(string value);
    partial void OnChargeChanged();
    partial void OnStahlsorteChanging(string value);
    partial void OnStahlsorteChanged();
    partial void OnWalzungChanging(string value);
    partial void OnWalzungChanged();
    partial void OnAuftragsdatumChanging(System.Nullable<System.DateTime> value);
    partial void OnAuftragsdatumChanged();
    partial void OnLieferterminChanging(System.Nullable<System.DateTime> value);
    partial void OnLieferterminChanged();
    partial void OnTechnischeAnmerkungenChanging(string value);
    partial void OnTechnischeAnmerkungenChanged();
    partial void OnBemerkungenChanging(string value);
    partial void OnBemerkungenChanged();
    partial void OnWichtigChanging(System.Nullable<bool> value);
    partial void OnWichtigChanged();
    partial void OnId_KundeChanging(System.Nullable<int> value);
    partial void OnId_KundeChanged();
    partial void OnId_BestimmungsortChanging(System.Nullable<int> value);
    partial void OnId_BestimmungsortChanged();
    partial void OnCChanging(System.Nullable<double> value);
    partial void OnCChanged();
    partial void OnMnChanging(System.Nullable<double> value);
    partial void OnMnChanged();
    partial void OnSiChanging(System.Nullable<double> value);
    partial void OnSiChanged();
    partial void OnPChanging(System.Nullable<double> value);
    partial void OnPChanged();
    partial void OnSChanging(System.Nullable<double> value);
    partial void OnSChanged();
    partial void OnCrChanging(System.Nullable<double> value);
    partial void OnCrChanged();
    partial void OnNiChanging(System.Nullable<double> value);
    partial void OnNiChanged();
    partial void OnMoChanging(System.Nullable<double> value);
    partial void OnMoChanged();
    #endregion
		
		public Auftrag()
		{
			this._Material = new EntitySet<Material>(new Action<Material>(this.attach_Material), new Action<Material>(this.detach_Material));
			this._Auftrags_Zuordnung = new EntitySet<Auftrags_Zuordnung>(new Action<Auftrags_Zuordnung>(this.attach_Auftrags_Zuordnung), new Action<Auftrags_Zuordnung>(this.detach_Auftrags_Zuordnung));
			this._Bestimmungsort = default(EntityRef<Bestimmungsort>);
			this._Kunde = default(EntityRef<Kunde>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuftragsNr", DbType="VarChar(10)")]
		public string AuftragsNr
		{
			get
			{
				return this._AuftragsNr;
			}
			set
			{
				if ((this._AuftragsNr != value))
				{
					this.OnAuftragsNrChanging(value);
					this.SendPropertyChanging();
					this._AuftragsNr = value;
					this.SendPropertyChanged("AuftragsNr");
					this.OnAuftragsNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODL", DbType="VarChar(10)")]
		public string ODL
		{
			get
			{
				return this._ODL;
			}
			set
			{
				if ((this._ODL != value))
				{
					this.OnODLChanging(value);
					this.SendPropertyChanging();
					this._ODL = value;
					this.SendPropertyChanged("ODL");
					this.OnODLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art", DbType="VarChar(50)")]
		public string Art
		{
			get
			{
				return this._Art;
			}
			set
			{
				if ((this._Art != value))
				{
					this.OnArtChanging(value);
					this.SendPropertyChanging();
					this._Art = value;
					this.SendPropertyChanged("Art");
					this.OnArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verarbeitung", DbType="VarChar(50)")]
		public string Verarbeitung
		{
			get
			{
				return this._Verarbeitung;
			}
			set
			{
				if ((this._Verarbeitung != value))
				{
					this.OnVerarbeitungChanging(value);
					this.SendPropertyChanging();
					this._Verarbeitung = value;
					this.SendPropertyChanged("Verarbeitung");
					this.OnVerarbeitungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lagerort", DbType="VarChar(20)")]
		public string Lagerort
		{
			get
			{
				return this._Lagerort;
			}
			set
			{
				if ((this._Lagerort != value))
				{
					this.OnLagerortChanging(value);
					this.SendPropertyChanging();
					this._Lagerort = value;
					this.SendPropertyChanged("Lagerort");
					this.OnLagerortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(5)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abmessung1", DbType="Float")]
		public System.Nullable<double> Abmessung1
		{
			get
			{
				return this._Abmessung1;
			}
			set
			{
				if ((this._Abmessung1 != value))
				{
					this.OnAbmessung1Changing(value);
					this.SendPropertyChanging();
					this._Abmessung1 = value;
					this.SendPropertyChanged("Abmessung1");
					this.OnAbmessung1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abmessung2", DbType="Float")]
		public System.Nullable<double> Abmessung2
		{
			get
			{
				return this._Abmessung2;
			}
			set
			{
				if ((this._Abmessung2 != value))
				{
					this.OnAbmessung2Changing(value);
					this.SendPropertyChanging();
					this._Abmessung2 = value;
					this.SendPropertyChanged("Abmessung2");
					this.OnAbmessung2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLänge", DbType="Float")]
		public System.Nullable<double> FLänge
		{
			get
			{
				return this._FLänge;
			}
			set
			{
				if ((this._FLänge != value))
				{
					this.OnFLängeChanging(value);
					this.SendPropertyChanging();
					this._FLänge = value;
					this.SendPropertyChanged("FLänge");
					this.OnFLängeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WLänge", DbType="Float")]
		public System.Nullable<double> WLänge
		{
			get
			{
				return this._WLänge;
			}
			set
			{
				if ((this._WLänge != value))
				{
					this.OnWLängeChanging(value);
					this.SendPropertyChanging();
					this._WLänge = value;
					this.SendPropertyChanged("WLänge");
					this.OnWLängeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charge", DbType="VarChar(5)")]
		public string Charge
		{
			get
			{
				return this._Charge;
			}
			set
			{
				if ((this._Charge != value))
				{
					this.OnChargeChanging(value);
					this.SendPropertyChanging();
					this._Charge = value;
					this.SendPropertyChanged("Charge");
					this.OnChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stahlsorte", DbType="VarChar(20)")]
		public string Stahlsorte
		{
			get
			{
				return this._Stahlsorte;
			}
			set
			{
				if ((this._Stahlsorte != value))
				{
					this.OnStahlsorteChanging(value);
					this.SendPropertyChanging();
					this._Stahlsorte = value;
					this.SendPropertyChanged("Stahlsorte");
					this.OnStahlsorteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Walzung", DbType="VarChar(20)")]
		public string Walzung
		{
			get
			{
				return this._Walzung;
			}
			set
			{
				if ((this._Walzung != value))
				{
					this.OnWalzungChanging(value);
					this.SendPropertyChanging();
					this._Walzung = value;
					this.SendPropertyChanged("Walzung");
					this.OnWalzungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auftragsdatum", DbType="Date")]
		public System.Nullable<System.DateTime> Auftragsdatum
		{
			get
			{
				return this._Auftragsdatum;
			}
			set
			{
				if ((this._Auftragsdatum != value))
				{
					this.OnAuftragsdatumChanging(value);
					this.SendPropertyChanging();
					this._Auftragsdatum = value;
					this.SendPropertyChanged("Auftragsdatum");
					this.OnAuftragsdatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Liefertermin", DbType="Date")]
		public System.Nullable<System.DateTime> Liefertermin
		{
			get
			{
				return this._Liefertermin;
			}
			set
			{
				if ((this._Liefertermin != value))
				{
					this.OnLieferterminChanging(value);
					this.SendPropertyChanging();
					this._Liefertermin = value;
					this.SendPropertyChanged("Liefertermin");
					this.OnLieferterminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnischeAnmerkungen", DbType="VarChar(MAX)")]
		public string TechnischeAnmerkungen
		{
			get
			{
				return this._TechnischeAnmerkungen;
			}
			set
			{
				if ((this._TechnischeAnmerkungen != value))
				{
					this.OnTechnischeAnmerkungenChanging(value);
					this.SendPropertyChanging();
					this._TechnischeAnmerkungen = value;
					this.SendPropertyChanged("TechnischeAnmerkungen");
					this.OnTechnischeAnmerkungenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkungen", DbType="VarChar(MAX)")]
		public string Bemerkungen
		{
			get
			{
				return this._Bemerkungen;
			}
			set
			{
				if ((this._Bemerkungen != value))
				{
					this.OnBemerkungenChanging(value);
					this.SendPropertyChanging();
					this._Bemerkungen = value;
					this.SendPropertyChanged("Bemerkungen");
					this.OnBemerkungenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wichtig", DbType="Bit")]
		public System.Nullable<bool> Wichtig
		{
			get
			{
				return this._Wichtig;
			}
			set
			{
				if ((this._Wichtig != value))
				{
					this.OnWichtigChanging(value);
					this.SendPropertyChanging();
					this._Wichtig = value;
					this.SendPropertyChanged("Wichtig");
					this.OnWichtigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Kunde", DbType="Int")]
		public System.Nullable<int> Id_Kunde
		{
			get
			{
				return this._Id_Kunde;
			}
			set
			{
				if ((this._Id_Kunde != value))
				{
					if (this._Kunde.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_KundeChanging(value);
					this.SendPropertyChanging();
					this._Id_Kunde = value;
					this.SendPropertyChanged("Id_Kunde");
					this.OnId_KundeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Bestimmungsort", DbType="Int")]
		public System.Nullable<int> Id_Bestimmungsort
		{
			get
			{
				return this._Id_Bestimmungsort;
			}
			set
			{
				if ((this._Id_Bestimmungsort != value))
				{
					if (this._Bestimmungsort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_BestimmungsortChanging(value);
					this.SendPropertyChanging();
					this._Id_Bestimmungsort = value;
					this.SendPropertyChanged("Id_Bestimmungsort");
					this.OnId_BestimmungsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="Float")]
		public System.Nullable<double> C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mn", DbType="Float")]
		public System.Nullable<double> Mn
		{
			get
			{
				return this._Mn;
			}
			set
			{
				if ((this._Mn != value))
				{
					this.OnMnChanging(value);
					this.SendPropertyChanging();
					this._Mn = value;
					this.SendPropertyChanged("Mn");
					this.OnMnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Si", DbType="Float")]
		public System.Nullable<double> Si
		{
			get
			{
				return this._Si;
			}
			set
			{
				if ((this._Si != value))
				{
					this.OnSiChanging(value);
					this.SendPropertyChanging();
					this._Si = value;
					this.SendPropertyChanged("Si");
					this.OnSiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P", DbType="Float")]
		public System.Nullable<double> P
		{
			get
			{
				return this._P;
			}
			set
			{
				if ((this._P != value))
				{
					this.OnPChanging(value);
					this.SendPropertyChanging();
					this._P = value;
					this.SendPropertyChanged("P");
					this.OnPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S", DbType="Float")]
		public System.Nullable<double> S
		{
			get
			{
				return this._S;
			}
			set
			{
				if ((this._S != value))
				{
					this.OnSChanging(value);
					this.SendPropertyChanging();
					this._S = value;
					this.SendPropertyChanged("S");
					this.OnSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cr", DbType="Float")]
		public System.Nullable<double> Cr
		{
			get
			{
				return this._Cr;
			}
			set
			{
				if ((this._Cr != value))
				{
					this.OnCrChanging(value);
					this.SendPropertyChanging();
					this._Cr = value;
					this.SendPropertyChanged("Cr");
					this.OnCrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ni", DbType="Float")]
		public System.Nullable<double> Ni
		{
			get
			{
				return this._Ni;
			}
			set
			{
				if ((this._Ni != value))
				{
					this.OnNiChanging(value);
					this.SendPropertyChanging();
					this._Ni = value;
					this.SendPropertyChanged("Ni");
					this.OnNiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mo", DbType="Float")]
		public System.Nullable<double> Mo
		{
			get
			{
				return this._Mo;
			}
			set
			{
				if ((this._Mo != value))
				{
					this.OnMoChanging(value);
					this.SendPropertyChanging();
					this._Mo = value;
					this.SendPropertyChanged("Mo");
					this.OnMoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auftrag_Material", Storage="_Material", ThisKey="Id", OtherKey="Id_Auftrag")]
		public EntitySet<Material> Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				this._Material.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auftrag_Auftrags_Zuordnung", Storage="_Auftrags_Zuordnung", ThisKey="Id", OtherKey="Id_Auftrag")]
		public EntitySet<Auftrags_Zuordnung> Auftrags_Zuordnung
		{
			get
			{
				return this._Auftrags_Zuordnung;
			}
			set
			{
				this._Auftrags_Zuordnung.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bestimmungsort_Auftrag", Storage="_Bestimmungsort", ThisKey="Id_Bestimmungsort", OtherKey="Id", IsForeignKey=true)]
		public Bestimmungsort Bestimmungsort
		{
			get
			{
				return this._Bestimmungsort.Entity;
			}
			set
			{
				Bestimmungsort previousValue = this._Bestimmungsort.Entity;
				if (((previousValue != value) 
							|| (this._Bestimmungsort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bestimmungsort.Entity = null;
						previousValue.Auftrag.Remove(this);
					}
					this._Bestimmungsort.Entity = value;
					if ((value != null))
					{
						value.Auftrag.Add(this);
						this._Id_Bestimmungsort = value.Id;
					}
					else
					{
						this._Id_Bestimmungsort = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bestimmungsort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunde_Auftrag", Storage="_Kunde", ThisKey="Id_Kunde", OtherKey="Id", IsForeignKey=true)]
		public Kunde Kunde
		{
			get
			{
				return this._Kunde.Entity;
			}
			set
			{
				Kunde previousValue = this._Kunde.Entity;
				if (((previousValue != value) 
							|| (this._Kunde.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kunde.Entity = null;
						previousValue.Auftrag.Remove(this);
					}
					this._Kunde.Entity = value;
					if ((value != null))
					{
						value.Auftrag.Add(this);
						this._Id_Kunde = value.Id;
					}
					else
					{
						this._Id_Kunde = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kunde");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Material(Material entity)
		{
			this.SendPropertyChanging();
			entity.Auftrag = this;
		}
		
		private void detach_Material(Material entity)
		{
			this.SendPropertyChanging();
			entity.Auftrag = null;
		}
		
		private void attach_Auftrags_Zuordnung(Auftrags_Zuordnung entity)
		{
			this.SendPropertyChanging();
			entity.Auftrag = this;
		}
		
		private void detach_Auftrags_Zuordnung(Auftrags_Zuordnung entity)
		{
			this.SendPropertyChanging();
			entity.Auftrag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auftrags_Zuordnung")]
	public partial class Auftrags_Zuordnung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Id_Auftrag;
		
		private System.Nullable<int> _Id_Maschine;
		
		private System.Nullable<int> _Id_Verfahren;
		
		private System.Nullable<int> _Schritt;
		
		private string _Status;
		
		private System.Nullable<int> _Temperatur;
		
		private System.Nullable<int> _Programm;
		
		private EntitySet<MN_Auftrag_Kategorie> _MN_Auftrag_Kategorie;
		
		private EntityRef<Auftrag> _Auftrag;
		
		private EntityRef<Maschine> _Maschine;
		
		private EntityRef<Verfahren> _Verfahren;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_AuftragChanging(System.Nullable<int> value);
    partial void OnId_AuftragChanged();
    partial void OnId_MaschineChanging(System.Nullable<int> value);
    partial void OnId_MaschineChanged();
    partial void OnId_VerfahrenChanging(System.Nullable<int> value);
    partial void OnId_VerfahrenChanged();
    partial void OnSchrittChanging(System.Nullable<int> value);
    partial void OnSchrittChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTemperaturChanging(System.Nullable<int> value);
    partial void OnTemperaturChanged();
    partial void OnProgrammChanging(System.Nullable<int> value);
    partial void OnProgrammChanged();
    #endregion
		
		public Auftrags_Zuordnung()
		{
			this._MN_Auftrag_Kategorie = new EntitySet<MN_Auftrag_Kategorie>(new Action<MN_Auftrag_Kategorie>(this.attach_MN_Auftrag_Kategorie), new Action<MN_Auftrag_Kategorie>(this.detach_MN_Auftrag_Kategorie));
			this._Auftrag = default(EntityRef<Auftrag>);
			this._Maschine = default(EntityRef<Maschine>);
			this._Verfahren = default(EntityRef<Verfahren>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Auftrag", DbType="Int")]
		public System.Nullable<int> Id_Auftrag
		{
			get
			{
				return this._Id_Auftrag;
			}
			set
			{
				if ((this._Id_Auftrag != value))
				{
					if (this._Auftrag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_AuftragChanging(value);
					this.SendPropertyChanging();
					this._Id_Auftrag = value;
					this.SendPropertyChanged("Id_Auftrag");
					this.OnId_AuftragChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Maschine", DbType="Int")]
		public System.Nullable<int> Id_Maschine
		{
			get
			{
				return this._Id_Maschine;
			}
			set
			{
				if ((this._Id_Maschine != value))
				{
					if (this._Maschine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_MaschineChanging(value);
					this.SendPropertyChanging();
					this._Id_Maschine = value;
					this.SendPropertyChanged("Id_Maschine");
					this.OnId_MaschineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Verfahren", DbType="Int")]
		public System.Nullable<int> Id_Verfahren
		{
			get
			{
				return this._Id_Verfahren;
			}
			set
			{
				if ((this._Id_Verfahren != value))
				{
					if (this._Verfahren.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_VerfahrenChanging(value);
					this.SendPropertyChanging();
					this._Id_Verfahren = value;
					this.SendPropertyChanged("Id_Verfahren");
					this.OnId_VerfahrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schritt", DbType="Int")]
		public System.Nullable<int> Schritt
		{
			get
			{
				return this._Schritt;
			}
			set
			{
				if ((this._Schritt != value))
				{
					this.OnSchrittChanging(value);
					this.SendPropertyChanging();
					this._Schritt = value;
					this.SendPropertyChanged("Schritt");
					this.OnSchrittChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperatur", DbType="Int")]
		public System.Nullable<int> Temperatur
		{
			get
			{
				return this._Temperatur;
			}
			set
			{
				if ((this._Temperatur != value))
				{
					this.OnTemperaturChanging(value);
					this.SendPropertyChanging();
					this._Temperatur = value;
					this.SendPropertyChanged("Temperatur");
					this.OnTemperaturChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Programm", DbType="Int")]
		public System.Nullable<int> Programm
		{
			get
			{
				return this._Programm;
			}
			set
			{
				if ((this._Programm != value))
				{
					this.OnProgrammChanging(value);
					this.SendPropertyChanging();
					this._Programm = value;
					this.SendPropertyChanged("Programm");
					this.OnProgrammChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auftrags_Zuordnung_MN_Auftrag_Kategorie", Storage="_MN_Auftrag_Kategorie", ThisKey="Id", OtherKey="Id_Auftrags_Zuorndung")]
		public EntitySet<MN_Auftrag_Kategorie> MN_Auftrag_Kategorie
		{
			get
			{
				return this._MN_Auftrag_Kategorie;
			}
			set
			{
				this._MN_Auftrag_Kategorie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auftrag_Auftrags_Zuordnung", Storage="_Auftrag", ThisKey="Id_Auftrag", OtherKey="Id", IsForeignKey=true)]
		public Auftrag Auftrag
		{
			get
			{
				return this._Auftrag.Entity;
			}
			set
			{
				Auftrag previousValue = this._Auftrag.Entity;
				if (((previousValue != value) 
							|| (this._Auftrag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auftrag.Entity = null;
						previousValue.Auftrags_Zuordnung.Remove(this);
					}
					this._Auftrag.Entity = value;
					if ((value != null))
					{
						value.Auftrags_Zuordnung.Add(this);
						this._Id_Auftrag = value.Id;
					}
					else
					{
						this._Id_Auftrag = default(Nullable<int>);
					}
					this.SendPropertyChanged("Auftrag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maschine_Auftrags_Zuordnung", Storage="_Maschine", ThisKey="Id_Maschine", OtherKey="Id", IsForeignKey=true)]
		public Maschine Maschine
		{
			get
			{
				return this._Maschine.Entity;
			}
			set
			{
				Maschine previousValue = this._Maschine.Entity;
				if (((previousValue != value) 
							|| (this._Maschine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maschine.Entity = null;
						previousValue.Auftrags_Zuordnung.Remove(this);
					}
					this._Maschine.Entity = value;
					if ((value != null))
					{
						value.Auftrags_Zuordnung.Add(this);
						this._Id_Maschine = value.Id;
					}
					else
					{
						this._Id_Maschine = default(Nullable<int>);
					}
					this.SendPropertyChanged("Maschine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Verfahren_Auftrags_Zuordnung", Storage="_Verfahren", ThisKey="Id_Verfahren", OtherKey="Id", IsForeignKey=true)]
		public Verfahren Verfahren
		{
			get
			{
				return this._Verfahren.Entity;
			}
			set
			{
				Verfahren previousValue = this._Verfahren.Entity;
				if (((previousValue != value) 
							|| (this._Verfahren.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Verfahren.Entity = null;
						previousValue.Auftrags_Zuordnung.Remove(this);
					}
					this._Verfahren.Entity = value;
					if ((value != null))
					{
						value.Auftrags_Zuordnung.Add(this);
						this._Id_Verfahren = value.Id;
					}
					else
					{
						this._Id_Verfahren = default(Nullable<int>);
					}
					this.SendPropertyChanged("Verfahren");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MN_Auftrag_Kategorie(MN_Auftrag_Kategorie entity)
		{
			this.SendPropertyChanging();
			entity.Auftrags_Zuordnung = this;
		}
		
		private void detach_MN_Auftrag_Kategorie(MN_Auftrag_Kategorie entity)
		{
			this.SendPropertyChanging();
			entity.Auftrags_Zuordnung = null;
		}
	}
}
#pragma warning restore 1591
